/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
//Criando o layout to site
let body = document.querySelector('body')

const Header = document.createElement('header')
Header.textContent = 'Library'

const Main = document.createElement('main')
const cardsSpace = document.createElement('div')
cardsSpace.setAttribute('id','cardsSpace')



const form = document.createElement('form')
form.action = '#'
const formTitle = document.createElement('h3')
formTitle.textContent = 'Add new books'
const inputTitle = document.createElement('input')
inputTitle.placeholder = 'Title'
inputTitle.required = true

const inputAuthor = document.createElement('input')
inputAuthor.placeholder = 'Author'
inputAuthor.required = true

const inputPages = document.createElement('input')
inputPages.placeholder = 'Pages'
inputPages.type = 'number'
inputPages.required = true

let label = document.createElement('label')
label.for = 'isReaded'
label.textContent = 'Did you read this book?'

let isReaded = document.createElement('input')
isReaded.setAttribute('id', 'isReaded')
isReaded.type = 'checkbox'

let submitButton = document.createElement('button')
submitButton.type = 'submit'
submitButton.textContent = 'Submit'
submitButton.setAttribute('id','submitButton')

form.append(formTitle,inputTitle,inputAuthor,inputPages,label,isReaded,submitButton)


Main.append(form,cardsSpace)
body.append(Header,Main)


//Quando o botão submit for apertado um card deve ser criado e ele deve possuir o titúlo do livro, o nome to autor, a quantidade de páginas, um botão que remove o card do cardSpace e um botão que confirma se o livro foi lido ou não, se o checkbox no form for checado o botão readedButton aparecera como read se o botão não for checado o ele aparecerá como No Readed e terá cor vermelha.
//Todos os objetos livros seram guardados em uma array, então adicione uma função ao script que pega o input do usuário e guarda o novo objeto livro em uma array

//A array que guarda os objetos livros 
let myLibrary = [];


//A função que adiciona os livros a array e os mostra no DOM

function Book(){
    let newBook = {
        title : inputTitle.value,
        author:inputAuthor.value,
        pages : inputPages.value,
        checkbox: isReaded.value
    }
    myLibrary.push(newBook)
    console.log(myLibrary)
    
}

function addBookToLibrary(){
    let cards = document.createElement('div')
cards.classList.add('cards')

let Ptitle = document.createElement('p')
Ptitle.textContent = inputTitle.value

let Pauthor = document.createElement('p')
Pauthor.textContent = inputAuthor.value

let Ppages= document.createElement('p')
Ppages.textContent = inputPages.value

const removeButton = document.createElement('button')
removeButton.textContent = 'Remove'
removeButton.classList.add('removeButton')

let readedButton = document.createElement('button')
readedButton.textContent = 'read'
readedButton.classList.add('readedButton')

cards.append(Ptitle,Pauthor,Ppages,removeButton,readedButton)


cardsSpace.append(cards)



   
}

submitButton.addEventListener('click',Book)
submitButton.addEventListener('click',addBookToLibrary)


/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXdsaWJyYXJ5Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vQ3JpYW5kbyBvIGxheW91dCB0byBzaXRlXHJcbmxldCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpXHJcblxyXG5jb25zdCBIZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoZWFkZXInKVxyXG5IZWFkZXIudGV4dENvbnRlbnQgPSAnTGlicmFyeSdcclxuXHJcbmNvbnN0IE1haW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdtYWluJylcclxuY29uc3QgY2FyZHNTcGFjZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcbmNhcmRzU3BhY2Uuc2V0QXR0cmlidXRlKCdpZCcsJ2NhcmRzU3BhY2UnKVxyXG5cclxuXHJcblxyXG5jb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpXHJcbmZvcm0uYWN0aW9uID0gJyMnXHJcbmNvbnN0IGZvcm1UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJylcclxuZm9ybVRpdGxlLnRleHRDb250ZW50ID0gJ0FkZCBuZXcgYm9va3MnXHJcbmNvbnN0IGlucHV0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpXHJcbmlucHV0VGl0bGUucGxhY2Vob2xkZXIgPSAnVGl0bGUnXHJcbmlucHV0VGl0bGUucmVxdWlyZWQgPSB0cnVlXHJcblxyXG5jb25zdCBpbnB1dEF1dGhvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0JylcclxuaW5wdXRBdXRob3IucGxhY2Vob2xkZXIgPSAnQXV0aG9yJ1xyXG5pbnB1dEF1dGhvci5yZXF1aXJlZCA9IHRydWVcclxuXHJcbmNvbnN0IGlucHV0UGFnZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpXHJcbmlucHV0UGFnZXMucGxhY2Vob2xkZXIgPSAnUGFnZXMnXHJcbmlucHV0UGFnZXMudHlwZSA9ICdudW1iZXInXHJcbmlucHV0UGFnZXMucmVxdWlyZWQgPSB0cnVlXHJcblxyXG5sZXQgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpXHJcbmxhYmVsLmZvciA9ICdpc1JlYWRlZCdcclxubGFiZWwudGV4dENvbnRlbnQgPSAnRGlkIHlvdSByZWFkIHRoaXMgYm9vaz8nXHJcblxyXG5sZXQgaXNSZWFkZWQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpXHJcbmlzUmVhZGVkLnNldEF0dHJpYnV0ZSgnaWQnLCAnaXNSZWFkZWQnKVxyXG5pc1JlYWRlZC50eXBlID0gJ2NoZWNrYm94J1xyXG5cclxubGV0IHN1Ym1pdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXHJcbnN1Ym1pdEJ1dHRvbi50eXBlID0gJ3N1Ym1pdCdcclxuc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gJ1N1Ym1pdCdcclxuc3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCdzdWJtaXRCdXR0b24nKVxyXG5cclxuZm9ybS5hcHBlbmQoZm9ybVRpdGxlLGlucHV0VGl0bGUsaW5wdXRBdXRob3IsaW5wdXRQYWdlcyxsYWJlbCxpc1JlYWRlZCxzdWJtaXRCdXR0b24pXHJcblxyXG5cclxuTWFpbi5hcHBlbmQoZm9ybSxjYXJkc1NwYWNlKVxyXG5ib2R5LmFwcGVuZChIZWFkZXIsTWFpbilcclxuXHJcblxyXG4vL1F1YW5kbyBvIGJvdMOjbyBzdWJtaXQgZm9yIGFwZXJ0YWRvIHVtIGNhcmQgZGV2ZSBzZXIgY3JpYWRvIGUgZWxlIGRldmUgcG9zc3VpciBvIHRpdMO6bG8gZG8gbGl2cm8sIG8gbm9tZSB0byBhdXRvciwgYSBxdWFudGlkYWRlIGRlIHDDoWdpbmFzLCB1bSBib3TDo28gcXVlIHJlbW92ZSBvIGNhcmQgZG8gY2FyZFNwYWNlIGUgdW0gYm90w6NvIHF1ZSBjb25maXJtYSBzZSBvIGxpdnJvIGZvaSBsaWRvIG91IG7Do28sIHNlIG8gY2hlY2tib3ggbm8gZm9ybSBmb3IgY2hlY2FkbyBvIGJvdMOjbyByZWFkZWRCdXR0b24gYXBhcmVjZXJhIGNvbW8gcmVhZCBzZSBvIGJvdMOjbyBuw6NvIGZvciBjaGVjYWRvIG8gZWxlIGFwYXJlY2Vyw6EgY29tbyBObyBSZWFkZWQgZSB0ZXLDoSBjb3IgdmVybWVsaGEuXHJcbi8vVG9kb3Mgb3Mgb2JqZXRvcyBsaXZyb3Mgc2VyYW0gZ3VhcmRhZG9zIGVtIHVtYSBhcnJheSwgZW50w6NvIGFkaWNpb25lIHVtYSBmdW7Dp8OjbyBhbyBzY3JpcHQgcXVlIHBlZ2EgbyBpbnB1dCBkbyB1c3XDoXJpbyBlIGd1YXJkYSBvIG5vdm8gb2JqZXRvIGxpdnJvIGVtIHVtYSBhcnJheVxyXG5cclxuLy9BIGFycmF5IHF1ZSBndWFyZGEgb3Mgb2JqZXRvcyBsaXZyb3MgXHJcbmxldCBteUxpYnJhcnkgPSBbXTtcclxuXHJcblxyXG4vL0EgZnVuw6fDo28gcXVlIGFkaWNpb25hIG9zIGxpdnJvcyBhIGFycmF5IGUgb3MgbW9zdHJhIG5vIERPTVxyXG5cclxuZnVuY3Rpb24gQm9vaygpe1xyXG4gICAgbGV0IG5ld0Jvb2sgPSB7XHJcbiAgICAgICAgdGl0bGUgOiBpbnB1dFRpdGxlLnZhbHVlLFxyXG4gICAgICAgIGF1dGhvcjppbnB1dEF1dGhvci52YWx1ZSxcclxuICAgICAgICBwYWdlcyA6IGlucHV0UGFnZXMudmFsdWUsXHJcbiAgICAgICAgY2hlY2tib3g6IGlzUmVhZGVkLnZhbHVlXHJcbiAgICB9XHJcbiAgICBteUxpYnJhcnkucHVzaChuZXdCb29rKVxyXG4gICAgY29uc29sZS5sb2cobXlMaWJyYXJ5KVxyXG4gICAgXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZEJvb2tUb0xpYnJhcnkoKXtcclxuICAgIGxldCBjYXJkcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcbmNhcmRzLmNsYXNzTGlzdC5hZGQoJ2NhcmRzJylcclxuXHJcbmxldCBQdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJylcclxuUHRpdGxlLnRleHRDb250ZW50ID0gaW5wdXRUaXRsZS52YWx1ZVxyXG5cclxubGV0IFBhdXRob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJylcclxuUGF1dGhvci50ZXh0Q29udGVudCA9IGlucHV0QXV0aG9yLnZhbHVlXHJcblxyXG5sZXQgUHBhZ2VzPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJylcclxuUHBhZ2VzLnRleHRDb250ZW50ID0gaW5wdXRQYWdlcy52YWx1ZVxyXG5cclxuY29uc3QgcmVtb3ZlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcclxucmVtb3ZlQnV0dG9uLnRleHRDb250ZW50ID0gJ1JlbW92ZSdcclxucmVtb3ZlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3JlbW92ZUJ1dHRvbicpXHJcblxyXG5sZXQgcmVhZGVkQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcclxucmVhZGVkQnV0dG9uLnRleHRDb250ZW50ID0gJ3JlYWQnXHJcbnJlYWRlZEJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdyZWFkZWRCdXR0b24nKVxyXG5cclxuY2FyZHMuYXBwZW5kKFB0aXRsZSxQYXV0aG9yLFBwYWdlcyxyZW1vdmVCdXR0b24scmVhZGVkQnV0dG9uKVxyXG5cclxuXHJcbmNhcmRzU3BhY2UuYXBwZW5kKGNhcmRzKVxyXG5cclxuXHJcblxyXG4gICBcclxufVxyXG5cclxuc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyxCb29rKVxyXG5zdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLGFkZEJvb2tUb0xpYnJhcnkpXHJcblxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=